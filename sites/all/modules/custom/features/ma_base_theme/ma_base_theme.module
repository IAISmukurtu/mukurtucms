<?php
/**
 * @file
 * Code for the Mukurtu Base Theme feature.
 */

include_once('ma_base_theme.features.inc');

/**
 * Implements hook_form_alter().
 */
function ma_base_theme_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {

    case 'user_login_block':
      $form['name']['#attributes']['placeholder'] = t('Username');
      $form['pass']['#attributes']['placeholder'] = t('Password');
      break;
    case 'comment_node_digital_heritage_form':
      $form['subject']['#size'] = '10';
      break;
  }
}

function ma_base_theme_css_alter(&$css) {
/*
  $colors = $css['sites/all/themes/mukurtu_theme/css/colors.css'];
  unset($css['sites/all/themes/mukurtu_theme/css/colors.css']);
  $css['sites/all/themes/mukurtu_theme/css/colors.css'] = $colors;
  $css['sites/all/themes/mukurtu_theme/css/colors.css']['group'] = 1000;
  $css['sites/all/themes/mukurtu_theme/css/colors.css']['weight'] = 1000;
*/
}

/**
 * Implements hook_install().
 */
function ma_base_theme_install() {
    ma_base_theme_modify_default_image_style('thumbnail');
    ma_base_theme_modify_default_image_style('medium');
    ma_base_theme_modify_default_image_style('large');
    ma_base_theme_update_7002();
}

/**
 * Adds an autorotate image effect to the default image styles
 */
function ma_base_theme_update_7000(&$sandbox) {
    ma_base_theme_modify_default_image_style('thumbnail');
    ma_base_theme_modify_default_image_style('medium');
    ma_base_theme_modify_default_image_style('large');
}

// Adds the autorotate effect to an image style
// We use this for the default image styles that features doesn't work with
function ma_base_theme_modify_default_image_style($image_style_name){
    $image_style = image_style_load($image_style_name);
    if(empty($image_style_name)) {
        return;
    }

    $lowest_weight = 1000000;
    $skip = FALSE;
    foreach($image_style['effects'] as $effect) {
        // We need to find the lowest weight because we want to have autorotate come first
        if(intval($effect['weight']) < $lowest_weight) {
            $lowest_weight = intval($effect['weight']);
        }

        // If it already has autorotate, don't add it a second time
        if($effect['effect callback'] == 'imagecache_autorotate_effect') {
            $skip = TRUE;
        }
    }

    if(!$skip) {
        $autorotate_effect = array(
            'label' => 'Autorotate',
            'help' => 'Autorotate image based on EXIF orientation and reset that tag.',
            'effect callback' => 'imagecache_autorotate_effect',
            'dimensions callback' => 'imagecache_autorotate_dimensions',
            'form callback' => 'imagecache_autorotate_form',
            'summary theme' => 'imagecache_autorotate_summary',
            'module' => 'imagecache_autorotate',
            'name' => 'imagecache_autorotate',
            'data' => array(),
            'weight' => $lowest_weight - 1,
        );
        array_unshift($image_style['effects'], $autorotate_effect);
    }

    image_default_style_save($image_style);
}