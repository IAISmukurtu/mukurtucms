<?php
/**
 * @file
 * Code for the Mukurtu Base Theme feature.
 */

include_once('ma_base_theme.features.inc');

/**
 * Implements hook_form_alter().
 */
function ma_base_theme_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {

    case 'user_login_block':
      $form['name']['#attributes']['placeholder'] = t('Username');
      $form['pass']['#attributes']['placeholder'] = t('Password');
      break;
    case 'comment_node_digital_heritage_form':
      $form['subject']['#size'] = '10';
      break;
  }
}

function ma_base_theme_css_alter(&$css) {
/*
  $colors = $css['sites/all/themes/mukurtu_theme/css/colors.css'];
  unset($css['sites/all/themes/mukurtu_theme/css/colors.css']);
  $css['sites/all/themes/mukurtu_theme/css/colors.css'] = $colors;
  $css['sites/all/themes/mukurtu_theme/css/colors.css']['group'] = 1000;
  $css['sites/all/themes/mukurtu_theme/css/colors.css']['weight'] = 1000;
*/
}

/**
 * Implements hook_install().
 */
function ma_base_theme_install() {
    ma_base_theme_modify_default_image_style('thumbnail');
    ma_base_theme_modify_default_image_style('medium');
    ma_base_theme_modify_default_image_style('large');
}

/**
 * Adds an autorotate image effect to the default image styles
 */
function ma_base_theme_update_7000(&$sandbox) {
    ma_base_theme_modify_default_image_style('thumbnail');
    ma_base_theme_modify_default_image_style('medium');
    ma_base_theme_modify_default_image_style('large');
}

// Adds the autorotate effect to an image style
// We use this for the default image styles that features doesn't work with
function ma_base_theme_modify_default_image_style($image_style_name){
    $image_style = image_style_load($image_style_name);
    if(empty($image_style_name)) {
        return;
    }

    $lowest_weight = 1000000;
    $skip = FALSE;
    foreach($image_style['effects'] as $effect) {
        // We need to find the lowest weight because we want to have autorotate come first
        if(intval($effect['weight']) < $lowest_weight) {
            $lowest_weight = intval($effect['weight']);
        }

        // If it already has autorotate, don't add it a second time
        if($effect['effect callback'] == 'imagecache_autorotate_effect') {
            $skip = TRUE;
        }
    }

    if(!$skip) {
        $autorotate_effect = array(
            'label' => 'Autorotate',
            'help' => 'Autorotate image based on EXIF orientation and reset that tag.',
            'effect callback' => 'imagecache_autorotate_effect',
            'dimensions callback' => 'imagecache_autorotate_dimensions',
            'form callback' => 'imagecache_autorotate_form',
            'summary theme' => 'imagecache_autorotate_summary',
            'module' => 'imagecache_autorotate',
            'name' => 'imagecache_autorotate',
            'data' => array(),
            'weight' => $lowest_weight - 1,
        );
        array_unshift($image_style['effects'], $autorotate_effect);
    }

    image_default_style_save($image_style);
}

/**
 * Implements hook_node_view_alter().
 */
function ma_base_theme_node_view_alter(&$build) {
    // Only display the first media item for certain view modes
    $view_modes = array('featured_content');
    if($build['#entity_type'] == 'node' && in_array($build['#view_mode'], $view_modes)){
        if(isset($build['field_media_asset'])) {
            $count = 0;
            foreach($build['field_media_asset']['#items'] as $index => $media_item) {
                if($count++ > 0) {
                    if(isset($build['field_media_asset'][$index])) {
                        unset($build['field_media_asset'][$index]);
                    }
                }
            }
        }
    }
}

function _ma_base_theme_create_default_beans() {
    // Bean structure is exported via features, but bean content is created here
    $already_created = variable_get('mukurtu_homepage_beans_created', FALSE);
    if(!$already_created && module_exists("bean")) {
        $stock_sid = variable_get('mukurtu_stock_homepage_sid', FALSE);
        if(!$stock_sid) {
            // Default Image
            $path = implode(DIRECTORY_SEPARATOR, array(drupal_get_path('theme', 'mukurtu'), 'images','frontpage-hero.png'));
            $stock_photo = file_get_contents(drupal_realpath($path));
            $file = file_save_data($stock_photo, "public://hero.png");

            // Create scald atom for default image
            $atom = new ScaldAtom('image', 'scald_image');
            $atom->title = "Default Frontpage Hero Image";
            $atom->base_id = $file->fid;
            $atom->scald_thumbnail[LANGUAGE_NONE][] = (array) $file;
            scald_atom_save($atom);
            variable_set('mukurtu_stock_homepage_sid', $atom->sid);
        } else {
            $atom = scald_atom_load($stock_sid);
        }

        if(!isset($atom->sid)) {
            return;
        }

        // Large Hero Image Bean
        $bean = bean_load_delta('frontpage-hero-image-one-column');
        if($bean == FALSE) {
            $bean = bean_create(array('type' => 'hero_image_one_column'));
        }
        
        if(!$already_created) {
            $bean->label = 'Frontpage Hero Image: One Column';
            $bean->title = '';
            $bean->delta = 'frontpage-hero-image-one-column';
            $bean->field_hero_image = array(
                LANGUAGE_NONE => array(array(
                'sid' => $atom->sid,
                )),
            );
            $bean->field_hero_image_caption = array(
                LANGUAGE_NONE => array(array(
                    'value' => t("Welcome to Mukurtu"),
                )),
            );
            $bean->save();
            variable_set('mukurtu_homepage_beans_created', TRUE);
        }

        // Side by side hero bean
        $bean = bean_load_delta('frontpage-hero-image-two-columns');
        if($bean == FALSE) {
            $bean = bean_create(array('type' => 'hero_image_two_columns'));
        }

        if(!$already_created) {
            $bean->label = 'Frontpage Hero Image: Two Columns';
            $bean->title = '';
            $bean->delta = 'frontpage-hero-image-two-columns';
            $bean->field_hero_image = array(
                LANGUAGE_NONE => array(array(
                'sid' => $atom->sid,
                )),
            );
            $bean->field_welcome_message = array(
                LANGUAGE_NONE => array(array(
                    'value' => t("Add a short welcome message here. You can include links to other pages or use existing media assets."),
                )),
            );
            $bean->field_welcome_title = array(
                LANGUAGE_NONE => array(array(
                    'value' => t("Welcome to Mukurtu"),
                )),
            );
            $bean->save();
        }
    }
}